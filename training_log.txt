----------------- Options ---------------
               batch_size: 1                             
                    beta1: 0.5                           
          checkpoints_dir: ./checkpoints                 
           continue_train: False                         
                crop_size: 256                           
                 dataroot: ./datasets/maps               	[default: None]
             dataset_mode: aligned                       
                direction: BtoA                          	[default: AtoB]
              display_env: main                          
             display_freq: 400                           
               display_id: 1                             
            display_ncols: 4                             
             display_port: 8097                          
           display_server: http://localhost              
          display_winsize: 256                           
                    epoch: latest                        
              epoch_count: 1                             
                 gan_mode: vanilla                       
                  gpu_ids: 1                             	[default: 0]
                init_gain: 0.02                          
                init_type: normal                        
                 input_nc: 3                             
                  isTrain: True                          	[default: None]
                lambda_L1: 100.0                         
                load_iter: 0                             	[default: 0]
                load_size: 286                           
                       lr: 0.0002                        
           lr_decay_iters: 50                            
                lr_policy: linear                        
         max_dataset_size: inf                           
                    model: pix2pix                       	[default: cycle_gan]
                 n_epochs: 100                           
           n_epochs_decay: 100                           
               n_layers_D: 3                             
                     name: maps_pix2pix                  	[default: experiment_name]
                      ndf: 64                            
                     netD: basic                         
                     netG: unet_256                      
                      ngf: 64                            
               no_dropout: False                         
                  no_flip: False                         
                  no_html: False                         
                     norm: batch                         
              num_threads: 4                             
                output_nc: 3                             
                    phase: train                         
                pool_size: 0                             
               preprocess: resize_and_crop               
               print_freq: 100                           
             save_by_iter: False                         
          save_epoch_freq: 5                             
         save_latest_freq: 5000                          
           serial_batches: False                         
                   suffix:                               
         update_html_freq: 1000                          
                use_wandb: False                         
                  verbose: False                         
       wandb_project_name: CycleGAN-and-pix2pix          
----------------- End -------------------
dataset [AlignedDataset] was created
The number of training images = 1096
initialize network with normal
initialize network with normal
model [Pix2PixModel] was created
---------- Networks initialized -------------
[Network G] Total number of parameters : 54.414 M
[Network D] Total number of parameters : 2.769 M
-----------------------------------------------
Setting up a new session...
create web directory ./checkpoints/maps_pix2pix/web...
/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:227: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn(
learning rate 0.0002000 -> 0.0002000
(epoch: 1, iters: 100, time: 0.024, data: 0.089) G_GAN: 2.121 G_L1: 17.111 D_real: 0.014 D_fake: 0.895 
(epoch: 1, iters: 200, time: 0.026, data: 0.002) G_GAN: 2.656 G_L1: 16.088 D_real: 0.082 D_fake: 0.604 
Traceback (most recent call last):
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/train.py", line 58, in <module>
    model.optimize_parameters()   # calculate loss functions, get gradients, update network weights
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/pix2pix_model.py", line 117, in optimize_parameters
    self.forward()                   # compute fake images: G(A)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/pix2pix_model.py", line 88, in forward
    self.fake_B = self.netG(self.real_A)  # G(A)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 191, in forward
    return self.module(*inputs[0], **module_kwargs[0])
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 466, in forward
    return self.model(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 534, in forward
    return self.model(x)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/networks.py", line 536, in forward
    return torch.cat([x, self.model(x)], 1)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/batchnorm.py", line 173, in forward
    self.num_batches_tracked.add_(1)  # type: ignore[has-type]
KeyboardInterrupt
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            (epoch: 12, iters: 75, time: 0.174, data: 0.001) G_GAN: 2.731 G_L1: 19.645 D_real: 0.010 D_fake: 0.100 
(epoch: 12, iters: 175, time: 0.032, data: 0.002) G_GAN: 1.419 G_L1: 21.810 D_real: 0.022 D_fake: 0.274 
(epoch: 12, iters: 275, time: 0.035, data: 0.002) G_GAN: 1.752 G_L1: 32.222 D_real: 0.000 D_fake: 0.477 
(epoch: 12, iters: 375, time: 0.032, data: 0.001) G_GAN: 1.890 G_L1: 20.646 D_real: 0.077 D_fake: 0.171 
(epoch: 12, iters: 475, time: 0.092, data: 0.002) G_GAN: 1.304 G_L1: 28.343 D_real: 0.012 D_fake: 0.728 
(epoch: 12, iters: 575, time: 0.033, data: 0.002) G_GAN: 2.344 G_L1: 17.943 D_real: 0.150 D_fake: 0.157 
(epoch: 12, iters: 675, time: 0.032, data: 0.002) G_GAN: 1.819 G_L1: 21.070 D_real: 0.775 D_fake: 0.276 
(epoch: 12, iters: 775, time: 0.030, data: 0.002) G_GAN: 2.243 G_L1: 17.918 D_real: 0.027 D_fake: 0.152 
(epoch: 12, iters: 875, time: 0.088, data: 0.001) G_GAN: 1.221 G_L1: 14.062 D_real: 0.987 D_fake: 0.429 
(epoch: 12, iters: 975, time: 0.032, data: 0.002) G_GAN: 1.497 G_L1: 15.309 D_real: 0.713 D_fake: 0.148 
(epoch: 12, iters: 1075, time: 0.032, data: 0.001) G_GAN: 1.647 G_L1: 21.543 D_real: 0.052 D_fake: 0.431 
(epoch: 12, iters: 1175, time: 0.033, data: 0.002) G_GAN: 0.771 G_L1: 15.097 D_real: 2.164 D_fake: 0.261 
(epoch: 12, iters: 1275, time: 0.156, data: 0.002) G_GAN: 2.893 G_L1: 28.712 D_real: 0.006 D_fake: 0.087 
(epoch: 12, iters: 1375, time: 0.032, data: 0.002) G_GAN: 2.235 G_L1: 14.448 D_real: 0.194 D_fake: 0.153 
(epoch: 12, iters: 1475, time: 0.031, data: 0.002) G_GAN: 1.644 G_L1: 16.473 D_real: 1.107 D_fake: 0.598 
(epoch: 12, iters: 1575, time: 0.032, data: 0.001) G_GAN: 2.521 G_L1: 15.332 D_real: 0.440 D_fake: 0.108 
(epoch: 12, iters: 1675, time: 0.089, data: 0.001) G_GAN: 1.949 G_L1: 24.856 D_real: 0.023 D_fake: 0.406 
(epoch: 12, iters: 1775, time: 0.031, data: 0.002) G_GAN: 1.401 G_L1: 25.027 D_real: 0.255 D_fake: 0.635 
(epoch: 12, iters: 1875, time: 0.035, data: 0.002) G_GAN: 2.320 G_L1: 14.752 D_real: 3.000 D_fake: 0.040 
Traceback (most recent call last):
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/train.py", line 58, in <module>
    model.optimize_parameters()   # calculate loss functions, get gradients, update network weights
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/pix2pix_model.py", line 126, in optimize_parameters
    self.backward_G()                   # calculate graidents for G
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/models/pix2pix_model.py", line 108, in backward_G
    pred_fake = self.netD(fake_AB)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 192, in forward
    replicas = self.replicate(self.module, self.device_ids[: len(inputs)])
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 199, in replicate
    return replicate(module, device_ids, not torch.is_grad_enabled())
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/parallel/replicate.py", line 160, in replicate
    replica = module._replicate_for_data_parallel()
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 2977, in _replicate_for_data_parallel
    replica._modules = replica._modules.copy()
  File "/mnt/e_disk/CH24S016/ee6180_assignment1/pix2pix/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1992, in __setattr__
    if isinstance(value, Buffer) or buffers is not None and name in buffers:
KeyboardInterrupt
